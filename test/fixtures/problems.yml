# Read about fixtures at http://ar.rubyonrails.org/classes/Fixtures.html

faky:
  title: Another Fake
  statement: Fake problem - no test cases
  input: fake.in
  output: fake.out
  memory_limit: 1
  time_limit: 1
  user: admin

fake:
  title: Fake problem
  statement: Fake problem - no test cases
  input: fake.in
  output: fake.out
  memory_limit: 1
  time_limit: 1
  user: admin

adding:
  title: Adding Numbers
  statement: Add the two integers and output
  input: add.in
  output: add.out
  memory_limit: 1
  time_limit: 1
  user: admin

irregularcakes:
  title: Irregular Cakes
  statement: |
    Mary the Mathematician has a bakery that she founded some years ago, but after all this time she has become bored with always baking the same rectangular and circular cakes. For her next birthday, she wants to bake an _irregular_ cake, which is defined as the area between two "polylines" between x=0 and x=W. These polylines will be called the lower boundary and the upper boundary.

    Formally, a polyline is defined by a sequence of points (P<sub>0</sub>, P<sub>1</sub>, ..., P<sub>n</sub>) going from left to right. Consecutive points are connected to form a sequence of line segments, which together make up the polyline. 

    Today is her birthday and she has baked an irregular cake bounded by two polylines with L points and U points respectively. After singing "Happy Birthday," she wants to make G-1 vertical cuts to split the cake into G slices with equal area. She can then share these cake slices with all her guests. However, the irregular cake shape makes this task pretty tricky. Can you help her decide where to make the cuts?

    #### Input

    Each test case begins with a line containing four integers: W (the width), L (the number of points on the lower boundary), U (the number of points on the upper boundary) and G (the number of guests at the party).

    This is followed by L lines specifying the lower boundary. The i-th line contains two integers x<sub>i</sub> and y<sub>i</sub>, representing the coordinates of the i-th point on the lower boundary. This is followed by U more lines specifying the upper boundary. The j-th line here contains two integers x<sub>j</sub> and y<sub>j</sub>, representing the coordinates of the j-th point on the upper boundary. 

    #### Output

    For each test case, output G lines. The first line should be "Case #x:" where x is the case number (starting from 1). The next G-1 lines should contain the x-coordinates at which cuts must be made, ordered from the leftmost cut to the rightmost cut.

    Answers with a relative or absolute error of at most 10<sup>-6</sup> will be considered correct. 
  input: cake.in
  output: cake.out
  memory_limit: 100
  time_limit: 0.1
  evaluator: float_eval
  user: admin
