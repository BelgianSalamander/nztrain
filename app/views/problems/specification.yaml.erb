# Specification for "<%= problem.title %>"
# 
# samples: array of test cases which are published in the problem statement
# prerequisites: array of test sets which must be correct before scoring any points
# test_set:
#   points: number of points allocated (relative to all other sets)
#   test_cases: array of test case names
# 
# Example:
#
# # specification.yaml
# samples: [ case1 ]
# prerequisites: [ set1name ]
# test_sets:
#   set1name: { points: 1, test_cases: [ case1 ] }
#   set2name: { points: 1, test_cases: [ case1, case2 ] }
#
# problem.zip
# ├── inputs/
# │   ├── case1.txt
# │   └── case2.txt
# ├── outputs/
# │   ├── case1.txt
# │   └── case2.txt
# └── specification.yaml

# names of sample test cases
<% delim = (problem.sample_cases.count < 5) ? ['[','','',', ',']'] : ["\n",' - ','',"\n","\n"] -%>
samples: <%= raw delim[0] + problem.sample_cases.pluck(:name).map{ |name| "#{delim[1]}#{y(name)}#{delim[2]}" }.join(delim[3]) + delim[4] %>
# names of prerequisite test sets
<% delim = (problem.prerequisite_sets.count < 5) ? ['[','','',', ',']'] : ["\n",' - ','',"\n","\n"] -%>
prerequisites: <%= raw delim[0] + problem.prerequisite_sets.pluck(:name).map{ |name| "#{delim[1]}#{y(name)}#{delim[2]}" }.join(delim[3]) + delim[4] %>
test_sets:
<% problem.test_sets.each do |set| %>
  <%= raw y set.name %>:
    points: <%= set.points %>
    test_cases: [<%= raw set.test_cases.map{ |kase| y kase.name }.join(", ") %>]
<% end %>

